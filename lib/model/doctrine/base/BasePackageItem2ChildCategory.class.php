<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PackageItem2ChildCategory', 'doctrine');

/**
 * BasePackageItem2ChildCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $package_item_id
 * @property integer $child_category_id
 * @property PackageItem $PackageItem
 * @property ChildCategory $ChildCategory
 * 
 * @method integer                   getPackageItemId()     Returns the current record's "package_item_id" value
 * @method integer                   getChildCategoryId()   Returns the current record's "child_category_id" value
 * @method PackageItem               getPackageItem()       Returns the current record's "PackageItem" value
 * @method ChildCategory             getChildCategory()     Returns the current record's "ChildCategory" value
 * @method PackageItem2ChildCategory setPackageItemId()     Sets the current record's "package_item_id" value
 * @method PackageItem2ChildCategory setChildCategoryId()   Sets the current record's "child_category_id" value
 * @method PackageItem2ChildCategory setPackageItem()       Sets the current record's "PackageItem" value
 * @method PackageItem2ChildCategory setChildCategory()     Sets the current record's "ChildCategory" value
 * 
 * @package    cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePackageItem2ChildCategory extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('package_item2_child_category');
        $this->hasColumn('package_item_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('child_category_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PackageItem', array(
             'local' => 'package_item_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ChildCategory', array(
             'local' => 'child_category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}