<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('BookingRoom', 'doctrine');

/**
 * BaseBookingRoom
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $hotel_id
 * @property integer $booking_id
 * @property integer $room_category_id
 * @property integer $room_id
 * @property string $room_category_name
 * @property string $room_number
 * @property float $price
 * @property Hotel $Hotel
 * @property Booking $Booking
 * @property RoomCategory $RoomCategory
 * @property Room $Room
 * 
 * @method integer      getHotelId()            Returns the current record's "hotel_id" value
 * @method integer      getBookingId()          Returns the current record's "booking_id" value
 * @method integer      getRoomCategoryId()     Returns the current record's "room_category_id" value
 * @method integer      getRoomId()             Returns the current record's "room_id" value
 * @method string       getRoomCategoryName()   Returns the current record's "room_category_name" value
 * @method string       getRoomNumber()         Returns the current record's "room_number" value
 * @method float        getPrice()              Returns the current record's "price" value
 * @method Hotel        getHotel()              Returns the current record's "Hotel" value
 * @method Booking      getBooking()            Returns the current record's "Booking" value
 * @method RoomCategory getRoomCategory()       Returns the current record's "RoomCategory" value
 * @method Room         getRoom()               Returns the current record's "Room" value
 * @method BookingRoom  setHotelId()            Sets the current record's "hotel_id" value
 * @method BookingRoom  setBookingId()          Sets the current record's "booking_id" value
 * @method BookingRoom  setRoomCategoryId()     Sets the current record's "room_category_id" value
 * @method BookingRoom  setRoomId()             Sets the current record's "room_id" value
 * @method BookingRoom  setRoomCategoryName()   Sets the current record's "room_category_name" value
 * @method BookingRoom  setRoomNumber()         Sets the current record's "room_number" value
 * @method BookingRoom  setPrice()              Sets the current record's "price" value
 * @method BookingRoom  setHotel()              Sets the current record's "Hotel" value
 * @method BookingRoom  setBooking()            Sets the current record's "Booking" value
 * @method BookingRoom  setRoomCategory()       Sets the current record's "RoomCategory" value
 * @method BookingRoom  setRoom()               Sets the current record's "Room" value
 * 
 * @package    cms
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBookingRoom extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('booking_room');
        $this->hasColumn('hotel_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('booking_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('room_category_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('room_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('room_category_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('room_number', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Hotel', array(
             'local' => 'hotel_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Booking', array(
             'local' => 'booking_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('RoomCategory', array(
             'local' => 'room_category_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasOne('Room', array(
             'local' => 'room_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));
    }
}